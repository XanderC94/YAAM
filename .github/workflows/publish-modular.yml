# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Publish YAAM Modular

on:
#   push:
#     tags:
#     - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Create Environment
        id: yaam-env
        uses: ./github/actions/create-yaam-env@master

      - name: Lint-Build-and-Test
        id: yaam-build
        uses: ./github/actions/test-and-build-yaam@master
        with:
          git-tag: ${{ steps.yaam-env.outputs.git-latest-tag }}
          git-rev: ${{ steps.yaam-env.outputs.git-latest-rev }}
          python-path: ${{ steps.yaam-env.outputs.python-path }}

      - name: Test-release-flags
        id: flags
        shell: pwsh
        run: |
          echo "::set-output name=is-alpha::$( ${{ Contains(steps.yaam-env.outputs.git-latest-tag, 'alpha') }} )"
          echo "::set-output name=is-test::$( ${{ Contains(steps.yaam-env.outputs.git-latest-tag, 'test') }} )"
          echo "::set-output name=rev-mismatch::$( ${{ steps.yaam-env.outputs.git-latest-rev != steps.yaam-env.outputs.git-tag-rev }} )"
          echo "::set-output name=is-push-event::$( ${{ github.event_name == 'push' }} )"

      - name: Release-artifacts
        id: release
        uses: ./github/actions/release-yaam-artifact@master
        with:
          git-tag: ${{ steps.yaam-env.outputs.git-latest-tag }}
          git-rev: ${{ steps.yaam-env.outputs.git-latest-rev }}
          is-pre-release: ${{ steps.flags.outputs.is-alpha }}
          draft: ${{ steps.flags.outputs.is-test }} || $ {{ steps.flags.outputs.rev-mismatch }} || !${{ steps.flags.outputs.is-push }}
