# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Publish YAAM

on:

  # workflow_dispatch:
  #   inputs:
  #     name:
  #       description: 'Release name'
  #       required: true
  #       type: string
  #     body:
  #       description: 'Release body'
  #       required: true
  #       type: string

  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    
jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Get last available repo info
      id: info
      run: |
        echo "::set-output name=tag::$(git describe --tags --abbrev=0 --always)"
        echo "::set-output name=rev::$(git rev-parse --short=8  head)"

    - name: Initialize MSVC developer tools
      uses: ilammy/msvc-dev-cmd@master
      with:
        arch: "x64"
        toolset: "14.30"
        
    - name: Set up Python distribution
      uses: actions/setup-python@v2
      with:
        python-version: "3.9.9"
        architecture: "x64"
        cache: pip
        
    - name: Get Python distribution info
      id: python
      shell: pwsh
      run: |
        echo "::set-output name=version::$(@(python -V).substring(7))"
        echo "::set-output name=pythonpath::$(@(./scripts/find-pythonpath.ps1))"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
        python ${{ steps.python.outputs.pythonpath }}/Scripts/pywin32_postinstall.py -install
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 150 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=150 --statistics
        
    # - name: Test with pytest
    #   run: |
    #     pytest
        
    - name: Build with nuitka
      shell: pwsh
      run: >
        .\nuitka-make-ci.ps1
        -mode standalone
        -compiler msvc
        -lto
        -tag ${{ steps.info.outputs.tag }}
        -revision ${{ steps.info.outputs.rev }}
        -pythonpath ${{ steps.python.outputs.pythonpath }}

    # - name: Echo output files
    #   shell: pwsh
    #   run: |
    #     echo $(dir ${{ github.workspace }}/bin/standalone/msvc)
    #     echo $(dir ${{ github.workspace }}/bin/standalone/msvc/yaam)

    - name: Upload artifacts
      id: artifacts
      uses: actions/upload-artifact@v2
      with:
        name: yaam-standalone-msvc-${{ steps.info.outputs.tag }}
        path: ${{ github.workspace }}/artifacts/yaam-standalone-msvc-${{ steps.info.outputs.tag }}.zip
        retention-days: 7
          
    - name: Release built artifacts
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: YAAM release ${{ steps.info.outputs.tag }}
        tag: ${{ steps.info.outputs.tag }}
        body: Automated build release for YAAM ${{ steps.info.outputs.tag }}
        bodyFile: ${{ github.workspace }}/changelogs/${{ steps.info.outputs.tag }}.md
        artifacts: ${{ github.workspace }}/artifacts/yaam-standalone-msvc-${{ steps.info.outputs.tag }}.zip
        token: ${{ secrets.yaam_publish_token }}
        prerelease: ${{ Contains(steps.info.outputs.tag, 'alpha') }}
        draft: ${{ Contains(steps.info.outputs.tag, 'test') }}
        allowUpdates: true
