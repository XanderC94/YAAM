# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Publish YAAM

on:

  # workflow_dispatch:
  #   inputs:
  #     name:
  #       description: 'Release name'
  #       required: true
  #       type: string
  #     body:
  #       description: 'Release body'
  #       required: true
  #       type: string

  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    
jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@master
      with:
        arch: "x64"
        toolset: "14.29"
        
    - name: Get last available repo info tag
      id: info
      run: |
        echo "::set-output name=tag::$(git describe --tags --abbrev=0 --always)"
        echo "::set-output name=rev::$(git rev-parse --short=8  head)"

    # - name: Install pipenv
    #   run: pipx install pipenv

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9.9"
        architecture: "x64"
        cache: pip
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
        python $env:RUNNER_TOOL_CACHE/Python/3.9.9/x64/Scripts/pywin32_postinstall.py -install
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    # - name: Test with pytest
    #   run: |
    #     pytest
        
    - name: Build with nuitka
      shell: pwsh
      run: |
        .\nuitka-make-ci.ps1 -lto -tag ${{steps.info.outputs.tag}} -revision ${{steps.info.outputs.rev}}
        echo $(dir ${{ github.workspace }}/bin/standalone/msvc)
        echo $(dir ${{ github.workspace }}/bin/standalone/msvc/yaam)

    # - name: Zip build artifacts
    #   uses: thedoctor0/zip-release@master
    #   with:
    #     type: 'zip'
    #     # path: ./bin/standalone/mvsc/yaam
    #     directory: ${{ github.workspace }}/bin/standalone/mvsc/yaam
    #     filename: yaam-standalone-msvc-${{steps.info.outputs.tag}}.zip
        
    # - name: Archive production artifacts
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: yaam-standalone-msvc
    #     path: |
    #       bin/standalone/mvsc/yaam/yaam-standalone-msvc.zip
          
    - name: Release built artifacts
      uses: ncipollo/release-action@v1
      with:
        name: YAAM release ${{steps.info.outputs.tag}}
        tag: ${{steps.info.outputs.tag}}
        body: Automated build release for YAAM ${{steps.info.outputs.tag}}
        artifacts: ${{ github.workspace }}/bin/standalone/mvsc/yaam-standalone-msvc-${{steps.info.outputs.tag}}.zip
        token: ${{ secrets.yaam_publish_token }}
        prerelease: Contains(${{steps.info.outputs.tag}}, 'alpha')
        draft: Contains(${{steps.info.outputs.tag}}, 'test')
